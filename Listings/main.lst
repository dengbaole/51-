C51 COMPILER V9.54   MAIN                                                                  11/04/2022 18:18:39 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\app\keil51\C51\BIN\C51.EXE main.c COMPACT OPTIMIZE(8,SPEED) BROWSE INCDIR(.\user;D:\app\keil51\C
                    -51\INC\Atmel) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "delay.h"
   3          #include "task.h"
   4          #include "nixie.h"
   5          #include "timer.h"
   6          #include "uart.h"
   7          #include "matrixkey.h"
   8          #include "beep.h"
   9          #include "AT24C02.h"
  10          #include "DS18B20.h"
  11          //#include "log.h"
  12          
  13          
  14          unsigned char KeyNum;
  15          unsigned char button;
  16          unsigned char Speed;
  17          unsigned char number;
  18          float temperature;
  19          
  20          void main()
  21          {
  22   1        
  23   1        char ch = 1;
  24   1      
  25   1        task_init();
  26   1        timer0_init();
  27   1        timer2_init();
  28   1        uart_init();   //波特率4800 8位无校验
  29   1        //printf("51_code version1.0.0\n");
  30   1        //EMlog(LOG_DEBUG,"HELLO\n");
  31   1      
  32   1      
  33   1          //播放音乐
  34   1      //  while(1)
  35   1      //  {
  36   1      //    if(Music[MusicSelect]!=0xFF)  //如果不是停止标志位
  37   1      //    {
  38   1      //      FreqSelect=Music[MusicSelect];  //选择音符对应的频率(在中断中的频率)
  39   1      //      MusicSelect++;
  40   1      //      Delay(SPEED/4*Music[MusicSelect]);  //选择音符对应的时值（响应时间）
  41   1      //      MusicSelect++;
  42   1      //      TR0=0;
  43   1      //      Delay(5); //音符间短暂停顿
  44   1      //      TR0=1;
  45   1      //    }
  46   1      //    else  //如果是停止标志位
  47   1      //    {
  48   1      //      TR0=0;
  49   1      //      while(1);
  50   1      //    }
  51   1      //  }
  52   1        Speed = AT24C02_ReadByte(1);
  53   1        Compare =AT24C02_ReadByte(2);
  54   1        
C51 COMPILER V9.54   MAIN                                                                  11/04/2022 18:18:39 PAGE 2   

  55   1        while(1)
  56   1        {
  57   2          // //矩阵按键(和蜂鸣器冲突)
  58   2          // KeyNum = MatrixKey();
  59   2          // if(KeyNum)
  60   2          // {
  61   2          //  printf("Keynum = %d",KeyNum);
  62   2          //  Static_Nixie(8,KeyNum);
  63   2          // }
  64   2          
  65   2          
  66   2          
  67   2          
  68   2          //独立按键
  69   2          button = key_state();
*** WARNING C206 IN LINE 69 OF main.c: 'key_state': missing function-prototype
  70   2          if(button)
  71   2          {
  72   3            //Static_Nixie(1,button);
  73   3            //Buzzer_Time(100);
  74   3            //测试AT24C02是否正常
  75   3            if(button == 1)
  76   3            {
  77   4              Speed++;
  78   4              Speed%=5;
  79   4              if(Speed==0){Compare=0;}  //设置比较值，改变PWM占空比
  80   4              if(Speed==1){Compare=45;}
  81   4              if(Speed==2){Compare=50;}
  82   4              if(Speed==3){Compare=75;}
  83   4              if(Speed==4){Compare=100;}
  84   4              Static_Nixie(1,Speed);
  85   4      
  86   4              AT24C02_WriteByte(1,Speed);
  87   4              AT24C02_WriteByte(2,Compare);
  88   4            }
  89   3              
  90   3            if(button == 2)
  91   3            {
  92   4              //number = AT24C02_ReadByte(1);
  93   4      //        printf("%c",number);
  94   4      //        
  95   4      //        DS18B20_ConvertT();                 //温度转换
  96   4      //        temperature = DS18B20_ReadT();      //读取温度
  97   4      //        printf("temperature  = %f c\n",temperature);
  98   4            }
  99   3          }
 100   2          
 101   2      
 102   2          //接收并处理完数据就清除[55 ,AA,]
 103   2          if(recv_flag)
 104   2          {
 105   3            recv_flag = 0;
 106   3            //处理数据(判断不同数据长度进行不同的处理)
 107   3            switch (recv_buf[0])
 108   3            {
 109   4              case 1:
 110   4      
 111   4                break;
 112   4              case 2:
 113   4                break;
 114   4              case 3:
 115   4              default:
C51 COMPILER V9.54   MAIN                                                                  11/04/2022 18:18:39 PAGE 3   

 116   4                break;
 117   4            }
 118   3            UART_SendString(recv_buf);
 119   3            clr_recvbuffer(recv_buf);    //清空数据
 120   3          }
 121   2          fsmTask(ch);
 122   2        }
 123   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      8       1
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
